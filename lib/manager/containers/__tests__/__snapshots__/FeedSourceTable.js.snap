// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lib > manager > FeedSourceTable should render with a project with feeds and a deployment 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(FeedSourceTable)
    onNewFeedSourceClick={[Function]}
    project={
      Object {
        "autoFetchFeeds": true,
        "autoFetchHour": 0,
        "autoFetchMinute": 0,
        "bounds": null,
        "buildConfig": Object {
          "fares": null,
          "fetchElevationUS": null,
          "stationTransfers": null,
          "subwayAccessTime": null,
        },
        "dateCreated": 1526305321824,
        "defaultTimeZone": null,
        "deployments": Array [
          Object {
            "customBuildConfig": null,
            "customRouterConfig": null,
            "dateCreated": 1553292345720,
            "deployedTo": null,
            "feedSourceId": null,
            "feedVersions": Array [
              Object {
                "feedSource": Object {
                  "dateCreated": 1536195264564,
                  "deployable": false,
                  "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                  "externalProperties": Object {},
                  "id": "mock-feed-with-version-id",
                  "isPublic": false,
                  "lastFetched": 1543389038810,
                  "lastUpdated": 1543389038810,
                  "latestValidation": Object {
                    "agencies": null,
                    "agencyCount": 1,
                    "avgDailyRevenueTime": 0,
                    "bounds": Object {
                      "east": -76.481211,
                      "north": 39.0486949672717,
                      "south": 38.92884,
                      "west": -76.5673055566884,
                    },
                    "endDate": "20190801",
                    "errorCount": 78,
                    "feedVersionId": "mock-feed-version-id",
                    "loadFailureReason": null,
                    "loadStatus": "SUCCESS",
                    "routeCount": 10,
                    "startDate": "20180801",
                    "stopCount": 237,
                    "stopTimesCount": 11170,
                    "tripCount": 415,
                  },
                  "latestVersionId": "mock-feed-version-id",
                  "name": "test feed with a version",
                  "noteCount": 0,
                  "organizationId": null,
                  "projectId": "mock-project-id",
                  "publishedVersionId": null,
                  "retrievalMethod": "MANUALLY_UPLOADED",
                  "s3Url": null,
                  "snapshotVersion": null,
                  "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                  "user": null,
                },
                "id": "mock-feed-version-id",
                "nextVersionId": null,
                "previousVersionId": null,
                "updated": 1543389038810,
                "validationResult": Object {
                  "agencies": null,
                  "agencyCount": 1,
                  "avgDailyRevenueTime": 0,
                  "bounds": Object {
                    "east": -76.481211,
                    "north": 39.0486949672717,
                    "south": 38.92884,
                    "west": -76.5673055566884,
                  },
                  "endDate": "20190801",
                  "errorCount": 78,
                  "feedVersionId": "mock-feed-version-id",
                  "loadFailureReason": null,
                  "loadStatus": "SUCCESS",
                  "routeCount": 10,
                  "startDate": "20180801",
                  "stopCount": 237,
                  "stopTimesCount": 11170,
                  "tripCount": 415,
                },
                "version": 1,
              },
            ],
            "id": "mock-deployment-id",
            "invalidFeedSources": Array [],
            "lastDeployed": null,
            "lastUpdated": 1553292345726,
            "name": "mock-deployment",
            "organizationId": null,
            "osmFileId": null,
            "otpCommit": null,
            "project": [Circular],
            "projectBounds": null,
            "routerId": null,
            "user": null,
          },
        ],
        "feedSources": Array [
          Object {
            "dateCreated": 1536195264564,
            "deployable": false,
            "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
            "externalProperties": Object {},
            "id": "mock-feed-with-version-id",
            "isPublic": false,
            "lastFetched": 1543389038810,
            "lastUpdated": 1543389038810,
            "latestValidation": Object {
              "agencies": null,
              "agencyCount": 1,
              "avgDailyRevenueTime": 0,
              "bounds": Object {
                "east": -76.481211,
                "north": 39.0486949672717,
                "south": 38.92884,
                "west": -76.5673055566884,
              },
              "endDate": "20190801",
              "errorCount": 78,
              "feedVersionId": "mock-feed-version-id",
              "loadFailureReason": null,
              "loadStatus": "SUCCESS",
              "routeCount": 10,
              "startDate": "20180801",
              "stopCount": 237,
              "stopTimesCount": 11170,
              "tripCount": 415,
            },
            "latestVersionId": "mock-feed-version-id",
            "name": "test feed with a version",
            "noteCount": 0,
            "organizationId": null,
            "projectId": "mock-project-id",
            "publishedVersionId": null,
            "retrievalMethod": "MANUALLY_UPLOADED",
            "s3Url": null,
            "snapshotVersion": null,
            "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
            "user": null,
          },
        ],
        "id": "mock-project-with-deployments-id",
        "lastUpdated": 1553236399556,
        "name": "mock-project-with-deployments",
        "organizationId": null,
        "otpServers": Array [],
        "pinnedDeploymentId": null,
        "routerConfig": Object {
          "carDropoffTime": null,
          "numItineraries": null,
          "requestLogFile": null,
          "stairsReluctance": null,
          "updaters": null,
          "walkSpeed": null,
        },
        "useCustomOsmBounds": false,
        "user": null,
      }
    }
  >
    <FeedSourceTable
      comparisonColumn="DEPLOYED"
      feedSources={
        Array [
          Object {
            "dateCreated": 1536195264564,
            "deployable": false,
            "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
            "externalProperties": Object {},
            "id": "mock-feed-with-version-id",
            "isPublic": false,
            "lastFetched": 1543389038810,
            "lastUpdated": 1543389038810,
            "latestValidation": Object {
              "agencies": null,
              "agencyCount": 1,
              "avgDailyRevenueTime": 0,
              "bounds": Object {
                "east": -76.481211,
                "north": 39.0486949672717,
                "south": 38.92884,
                "west": -76.5673055566884,
              },
              "endDate": "20190801",
              "errorCount": 78,
              "feedVersionId": "mock-feed-version-id",
              "loadFailureReason": null,
              "loadStatus": "SUCCESS",
              "routeCount": 10,
              "startDate": "20180801",
              "stopCount": 237,
              "stopTimesCount": 11170,
              "tripCount": 415,
            },
            "latestVersionId": "mock-feed-version-id",
            "name": "test feed with a version",
            "noteCount": 0,
            "organizationId": null,
            "projectId": "mock-project-id",
            "publishedVersionId": null,
            "retrievalMethod": "MANUALLY_UPLOADED",
            "s3Url": null,
            "snapshotVersion": null,
            "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
            "user": null,
          },
        ]
      }
      filteredFeedSources={
        Array [
          Object {
            "dateCreated": 1536195264564,
            "deployable": false,
            "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
            "externalProperties": Object {},
            "id": "mock-feed-with-version-id",
            "isPublic": false,
            "lastFetched": 1543389038810,
            "lastUpdated": 1543389038810,
            "latestValidation": Object {
              "agencies": null,
              "agencyCount": 1,
              "avgDailyRevenueTime": 0,
              "bounds": Object {
                "east": -76.481211,
                "north": 39.0486949672717,
                "south": 38.92884,
                "west": -76.5673055566884,
              },
              "endDate": "20190801",
              "errorCount": 78,
              "feedVersionId": "mock-feed-version-id",
              "loadFailureReason": null,
              "loadStatus": "SUCCESS",
              "routeCount": 10,
              "startDate": "20180801",
              "stopCount": 237,
              "stopTimesCount": 11170,
              "tripCount": 415,
            },
            "latestVersionId": "mock-feed-version-id",
            "name": "test feed with a version",
            "noteCount": 0,
            "organizationId": null,
            "projectId": "mock-project-id",
            "publishedVersionId": null,
            "retrievalMethod": "MANUALLY_UPLOADED",
            "s3Url": null,
            "snapshotVersion": null,
            "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
            "user": null,
          },
        ]
      }
      isFetching={false}
      isNotAdmin={false}
      onNewFeedSourceClick={[Function]}
      project={
        Object {
          "autoFetchFeeds": true,
          "autoFetchHour": 0,
          "autoFetchMinute": 0,
          "bounds": null,
          "buildConfig": Object {
            "fares": null,
            "fetchElevationUS": null,
            "stationTransfers": null,
            "subwayAccessTime": null,
          },
          "dateCreated": 1526305321824,
          "defaultTimeZone": null,
          "deployments": Array [
            Object {
              "customBuildConfig": null,
              "customRouterConfig": null,
              "dateCreated": 1553292345720,
              "deployedTo": null,
              "feedSourceId": null,
              "feedVersions": Array [
                Object {
                  "feedSource": Object {
                    "dateCreated": 1536195264564,
                    "deployable": false,
                    "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                    "externalProperties": Object {},
                    "id": "mock-feed-with-version-id",
                    "isPublic": false,
                    "lastFetched": 1543389038810,
                    "lastUpdated": 1543389038810,
                    "latestValidation": Object {
                      "agencies": null,
                      "agencyCount": 1,
                      "avgDailyRevenueTime": 0,
                      "bounds": Object {
                        "east": -76.481211,
                        "north": 39.0486949672717,
                        "south": 38.92884,
                        "west": -76.5673055566884,
                      },
                      "endDate": "20190801",
                      "errorCount": 78,
                      "feedVersionId": "mock-feed-version-id",
                      "loadFailureReason": null,
                      "loadStatus": "SUCCESS",
                      "routeCount": 10,
                      "startDate": "20180801",
                      "stopCount": 237,
                      "stopTimesCount": 11170,
                      "tripCount": 415,
                    },
                    "latestVersionId": "mock-feed-version-id",
                    "name": "test feed with a version",
                    "noteCount": 0,
                    "organizationId": null,
                    "projectId": "mock-project-id",
                    "publishedVersionId": null,
                    "retrievalMethod": "MANUALLY_UPLOADED",
                    "s3Url": null,
                    "snapshotVersion": null,
                    "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                    "user": null,
                  },
                  "id": "mock-feed-version-id",
                  "nextVersionId": null,
                  "previousVersionId": null,
                  "updated": 1543389038810,
                  "validationResult": Object {
                    "agencies": null,
                    "agencyCount": 1,
                    "avgDailyRevenueTime": 0,
                    "bounds": Object {
                      "east": -76.481211,
                      "north": 39.0486949672717,
                      "south": 38.92884,
                      "west": -76.5673055566884,
                    },
                    "endDate": "20190801",
                    "errorCount": 78,
                    "feedVersionId": "mock-feed-version-id",
                    "loadFailureReason": null,
                    "loadStatus": "SUCCESS",
                    "routeCount": 10,
                    "startDate": "20180801",
                    "stopCount": 237,
                    "stopTimesCount": 11170,
                    "tripCount": 415,
                  },
                  "version": 1,
                },
              ],
              "id": "mock-deployment-id",
              "invalidFeedSources": Array [],
              "lastDeployed": null,
              "lastUpdated": 1553292345726,
              "name": "mock-deployment",
              "organizationId": null,
              "osmFileId": null,
              "otpCommit": null,
              "project": [Circular],
              "projectBounds": null,
              "routerId": null,
              "user": null,
            },
          ],
          "feedSources": Array [
            Object {
              "dateCreated": 1536195264564,
              "deployable": false,
              "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
              "externalProperties": Object {},
              "id": "mock-feed-with-version-id",
              "isPublic": false,
              "lastFetched": 1543389038810,
              "lastUpdated": 1543389038810,
              "latestValidation": Object {
                "agencies": null,
                "agencyCount": 1,
                "avgDailyRevenueTime": 0,
                "bounds": Object {
                  "east": -76.481211,
                  "north": 39.0486949672717,
                  "south": 38.92884,
                  "west": -76.5673055566884,
                },
                "endDate": "20190801",
                "errorCount": 78,
                "feedVersionId": "mock-feed-version-id",
                "loadFailureReason": null,
                "loadStatus": "SUCCESS",
                "routeCount": 10,
                "startDate": "20180801",
                "stopCount": 237,
                "stopTimesCount": 11170,
                "tripCount": 415,
              },
              "latestVersionId": "mock-feed-version-id",
              "name": "test feed with a version",
              "noteCount": 0,
              "organizationId": null,
              "projectId": "mock-project-id",
              "publishedVersionId": null,
              "retrievalMethod": "MANUALLY_UPLOADED",
              "s3Url": null,
              "snapshotVersion": null,
              "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
              "user": null,
            },
          ],
          "id": "mock-project-with-deployments-id",
          "lastUpdated": 1553236399556,
          "name": "mock-project-with-deployments",
          "organizationId": null,
          "otpServers": Array [],
          "pinnedDeploymentId": null,
          "routerConfig": Object {
            "carDropoffTime": null,
            "numItineraries": null,
            "requestLogFile": null,
            "stairsReluctance": null,
            "updaters": null,
            "walkSpeed": null,
          },
          "useCustomOsmBounds": false,
          "user": null,
        }
      }
      sort="alphabetically-asc"
      user={
        Object {
          "isCheckingLogin": false,
          "permissions": UserPermissions {
            "appPermissionLookup": Object {
              "administer-application": Object {
                "type": "administer-application",
              },
            },
            "orgPermissionLookup": Object {},
            "organizationLookup": Object {},
            "projectLookup": Object {},
          },
          "profile": Object {
            "app_metadata": Object {
              "datatools": Array [
                Object {
                  "client_id": "mock-client-id",
                  "organizations": Array [],
                  "permissions": Array [
                    Object {
                      "type": "administer-application",
                    },
                  ],
                  "projects": Array [],
                  "subscriptions": Array [],
                },
              ],
            },
            "clientID": "mock-client-id",
            "created_at": "2016-03-04T18:59:22.569Z",
            "email": "mock-user@conveyal.com",
            "email_verified": true,
            "identities": Array [
              Object {
                "connection": "Username-Password-Authentication",
                "isSocial": false,
                "provider": "auth0",
                "user_id": "12345",
              },
            ],
            "jti": "gibberish",
            "last_password_reset": "2017-07-13T13:58:01.021Z",
            "name": "mock-user@conveyal.com",
            "nickname": "mock-user",
            "persistent": Object {},
            "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
            "sub": "auth0|12345",
            "updated_at": "2019-03-21T19:05:30.180Z",
            "user_id": "auth0|12345",
            "user_metadata": Object {
              "datatools": Array [
                Object {
                  "client_id": "mock-client-id",
                  "editor": Object {
                    "map_id": "mapbox.streets",
                  },
                  "hideTutorial": true,
                  "sidebarExpanded": false,
                },
              ],
              "lang": "en",
            },
          },
          "recentActivity": null,
          "redirectOnSuccess": null,
          "subscriptions": UserSubscriptions {
            "subscriptionLookup": Object {},
          },
          "token": "mock-token",
        }
      }
    >
      <Panel
        bsClass="panel"
        bsStyle="default"
        defaultExpanded={false}
        header={
          <Connect(ProjectFeedListToolbar)
            onNewFeedSourceClick={[Function]}
            project={
              Object {
                "autoFetchFeeds": true,
                "autoFetchHour": 0,
                "autoFetchMinute": 0,
                "bounds": null,
                "buildConfig": Object {
                  "fares": null,
                  "fetchElevationUS": null,
                  "stationTransfers": null,
                  "subwayAccessTime": null,
                },
                "dateCreated": 1526305321824,
                "defaultTimeZone": null,
                "deployments": Array [
                  Object {
                    "customBuildConfig": null,
                    "customRouterConfig": null,
                    "dateCreated": 1553292345720,
                    "deployedTo": null,
                    "feedSourceId": null,
                    "feedVersions": Array [
                      Object {
                        "feedSource": Object {
                          "dateCreated": 1536195264564,
                          "deployable": false,
                          "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                          "externalProperties": Object {},
                          "id": "mock-feed-with-version-id",
                          "isPublic": false,
                          "lastFetched": 1543389038810,
                          "lastUpdated": 1543389038810,
                          "latestValidation": Object {
                            "agencies": null,
                            "agencyCount": 1,
                            "avgDailyRevenueTime": 0,
                            "bounds": Object {
                              "east": -76.481211,
                              "north": 39.0486949672717,
                              "south": 38.92884,
                              "west": -76.5673055566884,
                            },
                            "endDate": "20190801",
                            "errorCount": 78,
                            "feedVersionId": "mock-feed-version-id",
                            "loadFailureReason": null,
                            "loadStatus": "SUCCESS",
                            "routeCount": 10,
                            "startDate": "20180801",
                            "stopCount": 237,
                            "stopTimesCount": 11170,
                            "tripCount": 415,
                          },
                          "latestVersionId": "mock-feed-version-id",
                          "name": "test feed with a version",
                          "noteCount": 0,
                          "organizationId": null,
                          "projectId": "mock-project-id",
                          "publishedVersionId": null,
                          "retrievalMethod": "MANUALLY_UPLOADED",
                          "s3Url": null,
                          "snapshotVersion": null,
                          "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                          "user": null,
                        },
                        "id": "mock-feed-version-id",
                        "nextVersionId": null,
                        "previousVersionId": null,
                        "updated": 1543389038810,
                        "validationResult": Object {
                          "agencies": null,
                          "agencyCount": 1,
                          "avgDailyRevenueTime": 0,
                          "bounds": Object {
                            "east": -76.481211,
                            "north": 39.0486949672717,
                            "south": 38.92884,
                            "west": -76.5673055566884,
                          },
                          "endDate": "20190801",
                          "errorCount": 78,
                          "feedVersionId": "mock-feed-version-id",
                          "loadFailureReason": null,
                          "loadStatus": "SUCCESS",
                          "routeCount": 10,
                          "startDate": "20180801",
                          "stopCount": 237,
                          "stopTimesCount": 11170,
                          "tripCount": 415,
                        },
                        "version": 1,
                      },
                    ],
                    "id": "mock-deployment-id",
                    "invalidFeedSources": Array [],
                    "lastDeployed": null,
                    "lastUpdated": 1553292345726,
                    "name": "mock-deployment",
                    "organizationId": null,
                    "osmFileId": null,
                    "otpCommit": null,
                    "project": [Circular],
                    "projectBounds": null,
                    "routerId": null,
                    "user": null,
                  },
                ],
                "feedSources": Array [
                  Object {
                    "dateCreated": 1536195264564,
                    "deployable": false,
                    "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                    "externalProperties": Object {},
                    "id": "mock-feed-with-version-id",
                    "isPublic": false,
                    "lastFetched": 1543389038810,
                    "lastUpdated": 1543389038810,
                    "latestValidation": Object {
                      "agencies": null,
                      "agencyCount": 1,
                      "avgDailyRevenueTime": 0,
                      "bounds": Object {
                        "east": -76.481211,
                        "north": 39.0486949672717,
                        "south": 38.92884,
                        "west": -76.5673055566884,
                      },
                      "endDate": "20190801",
                      "errorCount": 78,
                      "feedVersionId": "mock-feed-version-id",
                      "loadFailureReason": null,
                      "loadStatus": "SUCCESS",
                      "routeCount": 10,
                      "startDate": "20180801",
                      "stopCount": 237,
                      "stopTimesCount": 11170,
                      "tripCount": 415,
                    },
                    "latestVersionId": "mock-feed-version-id",
                    "name": "test feed with a version",
                    "noteCount": 0,
                    "organizationId": null,
                    "projectId": "mock-project-id",
                    "publishedVersionId": null,
                    "retrievalMethod": "MANUALLY_UPLOADED",
                    "s3Url": null,
                    "snapshotVersion": null,
                    "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                    "user": null,
                  },
                ],
                "id": "mock-project-with-deployments-id",
                "lastUpdated": 1553236399556,
                "name": "mock-project-with-deployments",
                "organizationId": null,
                "otpServers": Array [],
                "pinnedDeploymentId": null,
                "routerConfig": Object {
                  "carDropoffTime": null,
                  "numItineraries": null,
                  "requestLogFile": null,
                  "stairsReluctance": null,
                  "updaters": null,
                  "walkSpeed": null,
                },
                "useCustomOsmBounds": false,
                "user": null,
              }
            }
          />
        }
      >
        <div
          className="panel panel-default"
        >
          <div
            className="panel-heading"
          >
            <Connect(ProjectFeedListToolbar)
              className="panel-title"
              onNewFeedSourceClick={[Function]}
              project={
                Object {
                  "autoFetchFeeds": true,
                  "autoFetchHour": 0,
                  "autoFetchMinute": 0,
                  "bounds": null,
                  "buildConfig": Object {
                    "fares": null,
                    "fetchElevationUS": null,
                    "stationTransfers": null,
                    "subwayAccessTime": null,
                  },
                  "dateCreated": 1526305321824,
                  "defaultTimeZone": null,
                  "deployments": Array [
                    Object {
                      "customBuildConfig": null,
                      "customRouterConfig": null,
                      "dateCreated": 1553292345720,
                      "deployedTo": null,
                      "feedSourceId": null,
                      "feedVersions": Array [
                        Object {
                          "feedSource": Object {
                            "dateCreated": 1536195264564,
                            "deployable": false,
                            "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                            "externalProperties": Object {},
                            "id": "mock-feed-with-version-id",
                            "isPublic": false,
                            "lastFetched": 1543389038810,
                            "lastUpdated": 1543389038810,
                            "latestValidation": Object {
                              "agencies": null,
                              "agencyCount": 1,
                              "avgDailyRevenueTime": 0,
                              "bounds": Object {
                                "east": -76.481211,
                                "north": 39.0486949672717,
                                "south": 38.92884,
                                "west": -76.5673055566884,
                              },
                              "endDate": "20190801",
                              "errorCount": 78,
                              "feedVersionId": "mock-feed-version-id",
                              "loadFailureReason": null,
                              "loadStatus": "SUCCESS",
                              "routeCount": 10,
                              "startDate": "20180801",
                              "stopCount": 237,
                              "stopTimesCount": 11170,
                              "tripCount": 415,
                            },
                            "latestVersionId": "mock-feed-version-id",
                            "name": "test feed with a version",
                            "noteCount": 0,
                            "organizationId": null,
                            "projectId": "mock-project-id",
                            "publishedVersionId": null,
                            "retrievalMethod": "MANUALLY_UPLOADED",
                            "s3Url": null,
                            "snapshotVersion": null,
                            "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                            "user": null,
                          },
                          "id": "mock-feed-version-id",
                          "nextVersionId": null,
                          "previousVersionId": null,
                          "updated": 1543389038810,
                          "validationResult": Object {
                            "agencies": null,
                            "agencyCount": 1,
                            "avgDailyRevenueTime": 0,
                            "bounds": Object {
                              "east": -76.481211,
                              "north": 39.0486949672717,
                              "south": 38.92884,
                              "west": -76.5673055566884,
                            },
                            "endDate": "20190801",
                            "errorCount": 78,
                            "feedVersionId": "mock-feed-version-id",
                            "loadFailureReason": null,
                            "loadStatus": "SUCCESS",
                            "routeCount": 10,
                            "startDate": "20180801",
                            "stopCount": 237,
                            "stopTimesCount": 11170,
                            "tripCount": 415,
                          },
                          "version": 1,
                        },
                      ],
                      "id": "mock-deployment-id",
                      "invalidFeedSources": Array [],
                      "lastDeployed": null,
                      "lastUpdated": 1553292345726,
                      "name": "mock-deployment",
                      "organizationId": null,
                      "osmFileId": null,
                      "otpCommit": null,
                      "project": [Circular],
                      "projectBounds": null,
                      "routerId": null,
                      "user": null,
                    },
                  ],
                  "feedSources": Array [
                    Object {
                      "dateCreated": 1536195264564,
                      "deployable": false,
                      "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                      "externalProperties": Object {},
                      "id": "mock-feed-with-version-id",
                      "isPublic": false,
                      "lastFetched": 1543389038810,
                      "lastUpdated": 1543389038810,
                      "latestValidation": Object {
                        "agencies": null,
                        "agencyCount": 1,
                        "avgDailyRevenueTime": 0,
                        "bounds": Object {
                          "east": -76.481211,
                          "north": 39.0486949672717,
                          "south": 38.92884,
                          "west": -76.5673055566884,
                        },
                        "endDate": "20190801",
                        "errorCount": 78,
                        "feedVersionId": "mock-feed-version-id",
                        "loadFailureReason": null,
                        "loadStatus": "SUCCESS",
                        "routeCount": 10,
                        "startDate": "20180801",
                        "stopCount": 237,
                        "stopTimesCount": 11170,
                        "tripCount": 415,
                      },
                      "latestVersionId": "mock-feed-version-id",
                      "name": "test feed with a version",
                      "noteCount": 0,
                      "organizationId": null,
                      "projectId": "mock-project-id",
                      "publishedVersionId": null,
                      "retrievalMethod": "MANUALLY_UPLOADED",
                      "s3Url": null,
                      "snapshotVersion": null,
                      "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                      "user": null,
                    },
                  ],
                  "id": "mock-project-with-deployments-id",
                  "lastUpdated": 1553236399556,
                  "name": "mock-project-with-deployments",
                  "organizationId": null,
                  "otpServers": Array [],
                  "pinnedDeploymentId": null,
                  "routerConfig": Object {
                    "carDropoffTime": null,
                    "numItineraries": null,
                    "requestLogFile": null,
                    "stairsReluctance": null,
                    "updaters": null,
                    "walkSpeed": null,
                  },
                  "useCustomOsmBounds": false,
                  "user": null,
                }
              }
            >
              <ProjectFeedListToolbar
                calculateFeedSourceTableComparisonColumn={[Function]}
                className="panel-title"
                downloadFeedForProject={[Function]}
                fetchFeedsForProject={[Function]}
                filter={
                  Object {
                    "feedSourceTableComparisonColumn": "DEPLOYED",
                    "feedSourceTableFilterCountStrategy": "LATEST",
                    "filter": null,
                    "searchText": null,
                  }
                }
                filterCounts={
                  Object {
                    "active": 1,
                    "all": 1,
                    "expired": 0,
                    "expiring": 0,
                    "future": 0,
                  }
                }
                onNewFeedSourceClick={[Function]}
                possibleComparisons={
                  Array [
                    "LATEST",
                    "DEPLOYED",
                  ]
                }
                project={
                  Object {
                    "autoFetchFeeds": true,
                    "autoFetchHour": 0,
                    "autoFetchMinute": 0,
                    "bounds": null,
                    "buildConfig": Object {
                      "fares": null,
                      "fetchElevationUS": null,
                      "stationTransfers": null,
                      "subwayAccessTime": null,
                    },
                    "dateCreated": 1526305321824,
                    "defaultTimeZone": null,
                    "deployments": Array [
                      Object {
                        "customBuildConfig": null,
                        "customRouterConfig": null,
                        "dateCreated": 1553292345720,
                        "deployedTo": null,
                        "feedSourceId": null,
                        "feedVersions": Array [
                          Object {
                            "feedSource": Object {
                              "dateCreated": 1536195264564,
                              "deployable": false,
                              "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                              "externalProperties": Object {},
                              "id": "mock-feed-with-version-id",
                              "isPublic": false,
                              "lastFetched": 1543389038810,
                              "lastUpdated": 1543389038810,
                              "latestValidation": Object {
                                "agencies": null,
                                "agencyCount": 1,
                                "avgDailyRevenueTime": 0,
                                "bounds": Object {
                                  "east": -76.481211,
                                  "north": 39.0486949672717,
                                  "south": 38.92884,
                                  "west": -76.5673055566884,
                                },
                                "endDate": "20190801",
                                "errorCount": 78,
                                "feedVersionId": "mock-feed-version-id",
                                "loadFailureReason": null,
                                "loadStatus": "SUCCESS",
                                "routeCount": 10,
                                "startDate": "20180801",
                                "stopCount": 237,
                                "stopTimesCount": 11170,
                                "tripCount": 415,
                              },
                              "latestVersionId": "mock-feed-version-id",
                              "name": "test feed with a version",
                              "noteCount": 0,
                              "organizationId": null,
                              "projectId": "mock-project-id",
                              "publishedVersionId": null,
                              "retrievalMethod": "MANUALLY_UPLOADED",
                              "s3Url": null,
                              "snapshotVersion": null,
                              "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                              "user": null,
                            },
                            "id": "mock-feed-version-id",
                            "nextVersionId": null,
                            "previousVersionId": null,
                            "updated": 1543389038810,
                            "validationResult": Object {
                              "agencies": null,
                              "agencyCount": 1,
                              "avgDailyRevenueTime": 0,
                              "bounds": Object {
                                "east": -76.481211,
                                "north": 39.0486949672717,
                                "south": 38.92884,
                                "west": -76.5673055566884,
                              },
                              "endDate": "20190801",
                              "errorCount": 78,
                              "feedVersionId": "mock-feed-version-id",
                              "loadFailureReason": null,
                              "loadStatus": "SUCCESS",
                              "routeCount": 10,
                              "startDate": "20180801",
                              "stopCount": 237,
                              "stopTimesCount": 11170,
                              "tripCount": 415,
                            },
                            "version": 1,
                          },
                        ],
                        "id": "mock-deployment-id",
                        "invalidFeedSources": Array [],
                        "lastDeployed": null,
                        "lastUpdated": 1553292345726,
                        "name": "mock-deployment",
                        "organizationId": null,
                        "osmFileId": null,
                        "otpCommit": null,
                        "project": [Circular],
                        "projectBounds": null,
                        "routerId": null,
                        "user": null,
                      },
                    ],
                    "feedSources": Array [
                      Object {
                        "dateCreated": 1536195264564,
                        "deployable": false,
                        "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                        "externalProperties": Object {},
                        "id": "mock-feed-with-version-id",
                        "isPublic": false,
                        "lastFetched": 1543389038810,
                        "lastUpdated": 1543389038810,
                        "latestValidation": Object {
                          "agencies": null,
                          "agencyCount": 1,
                          "avgDailyRevenueTime": 0,
                          "bounds": Object {
                            "east": -76.481211,
                            "north": 39.0486949672717,
                            "south": 38.92884,
                            "west": -76.5673055566884,
                          },
                          "endDate": "20190801",
                          "errorCount": 78,
                          "feedVersionId": "mock-feed-version-id",
                          "loadFailureReason": null,
                          "loadStatus": "SUCCESS",
                          "routeCount": 10,
                          "startDate": "20180801",
                          "stopCount": 237,
                          "stopTimesCount": 11170,
                          "tripCount": 415,
                        },
                        "latestVersionId": "mock-feed-version-id",
                        "name": "test feed with a version",
                        "noteCount": 0,
                        "organizationId": null,
                        "projectId": "mock-project-id",
                        "publishedVersionId": null,
                        "retrievalMethod": "MANUALLY_UPLOADED",
                        "s3Url": null,
                        "snapshotVersion": null,
                        "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                        "user": null,
                      },
                    ],
                    "id": "mock-project-with-deployments-id",
                    "lastUpdated": 1553236399556,
                    "name": "mock-project-with-deployments",
                    "organizationId": null,
                    "otpServers": Array [],
                    "pinnedDeploymentId": null,
                    "routerConfig": Object {
                      "carDropoffTime": null,
                      "numItineraries": null,
                      "requestLogFile": null,
                      "stairsReluctance": null,
                      "updaters": null,
                      "walkSpeed": null,
                    },
                    "useCustomOsmBounds": false,
                    "user": null,
                  }
                }
                projectEditDisabled={false}
                setFeedSort={[Function]}
                setFeedSourceTableFilterCountStrategy={[Function]}
                setVisibilityFilter={[Function]}
                setVisibilitySearchText={[Function]}
                sort="alphabetically-asc"
                thirdPartySync={[Function]}
                user={
                  Object {
                    "isCheckingLogin": false,
                    "permissions": UserPermissions {
                      "appPermissionLookup": Object {
                        "administer-application": Object {
                          "type": "administer-application",
                        },
                      },
                      "orgPermissionLookup": Object {},
                      "organizationLookup": Object {},
                      "projectLookup": Object {},
                    },
                    "profile": Object {
                      "app_metadata": Object {
                        "datatools": Array [
                          Object {
                            "client_id": "mock-client-id",
                            "organizations": Array [],
                            "permissions": Array [
                              Object {
                                "type": "administer-application",
                              },
                            ],
                            "projects": Array [],
                            "subscriptions": Array [],
                          },
                        ],
                      },
                      "clientID": "mock-client-id",
                      "created_at": "2016-03-04T18:59:22.569Z",
                      "email": "mock-user@conveyal.com",
                      "email_verified": true,
                      "identities": Array [
                        Object {
                          "connection": "Username-Password-Authentication",
                          "isSocial": false,
                          "provider": "auth0",
                          "user_id": "12345",
                        },
                      ],
                      "jti": "gibberish",
                      "last_password_reset": "2017-07-13T13:58:01.021Z",
                      "name": "mock-user@conveyal.com",
                      "nickname": "mock-user",
                      "persistent": Object {},
                      "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                      "sub": "auth0|12345",
                      "updated_at": "2019-03-21T19:05:30.180Z",
                      "user_id": "auth0|12345",
                      "user_metadata": Object {
                        "datatools": Array [
                          Object {
                            "client_id": "mock-client-id",
                            "editor": Object {
                              "map_id": "mapbox.streets",
                            },
                            "hideTutorial": true,
                            "sidebarExpanded": false,
                          },
                        ],
                        "lang": "en",
                      },
                    },
                    "recentActivity": null,
                    "redirectOnSuccess": null,
                    "subscriptions": UserSubscriptions {
                      "subscriptionLookup": Object {},
                    },
                    "token": "mock-token",
                  }
                }
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <div
                    className="row"
                  >
                    <Col
                      bsClass="col"
                      componentClass="div"
                      style={
                        Object {
                          "marginTop": 25,
                        }
                      }
                      xs={4}
                    >
                      <div
                        className="col-xs-4"
                        style={
                          Object {
                            "marginTop": 25,
                          }
                        }
                      >
                        <Form
                          bsClass="form"
                          componentClass="form"
                          horizontal={false}
                          inline={true}
                          style={
                            Object {
                              "display": "inline",
                            }
                          }
                        >
                          <form
                            className="form-inline"
                            style={
                              Object {
                                "display": "inline",
                              }
                            }
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="feed-source-toolbar-formgroup"
                              controlId="formControlsSelect"
                            >
                              <div
                                className="feed-source-toolbar-formgroup form-group"
                              >
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="input"
                                  onChange={[Function]}
                                  placeholder="Search by name"
                                >
                                  <input
                                    className="form-control"
                                    id="formControlsSelect"
                                    onChange={[Function]}
                                    placeholder="Search by name"
                                  />
                                </FormControl>
                              </div>
                            </FormGroup>
                          </form>
                        </Form>
                        <DropdownButton
                          id="project-feedsource-table-sort-button"
                          style={
                            Object {
                              "marginLeft": 20,
                            }
                          }
                          title="Sort By"
                        >
                          <Uncontrolled(Dropdown)
                            id="project-feedsource-table-sort-button"
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="project-feedsource-table-sort-button"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    id="project-feedsource-table-sort-button"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    style={
                                      Object {
                                        "marginLeft": 20,
                                      }
                                    }
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="dropdown-toggle"
                                      disabled={false}
                                      id="project-feedsource-table-sort-button"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                      style={
                                        Object {
                                          "marginLeft": 20,
                                        }
                                      }
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="project-feedsource-table-sort-button"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        style={
                                          Object {
                                            "marginLeft": 20,
                                          }
                                        }
                                        type="button"
                                      >
                                        Sort By
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="project-feedsource-table-sort-button"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="project-feedsource-table-sort-button"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={true}
                                          key=".$sort-header-note"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="dropdown-header"
                                            onKeyDown={[Function]}
                                            role="heading"
                                          >
                                            Note: sorting only available on latest version data
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={true}
                                          key=".$feed-sort-alphabetically-header"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="dropdown-header"
                                            onKeyDown={[Function]}
                                            role="heading"
                                          >
                                            Alphabetically
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-alphabetically-asc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                A-Z
                                                <Icon
                                                  style={
                                                    Object {
                                                      "marginLeft": 6,
                                                    }
                                                  }
                                                  type="check"
                                                >
                                                  <i
                                                    className="fa fa-check fa-fw "
                                                    style={
                                                      Object {
                                                        "marginLeft": 6,
                                                      }
                                                    }
                                                  />
                                                </Icon>
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-alphabetically-desc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Z-A
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={true}
                                          header={false}
                                          key=".$feed-sort-alphabetically-divider"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="divider"
                                            onKeyDown={[Function]}
                                            role="separator"
                                          />
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={true}
                                          key=".$feed-sort-endDate-header"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="dropdown-header"
                                            onKeyDown={[Function]}
                                            role="heading"
                                          >
                                            Expiration Date
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-endDate-asc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Earliest-Latest
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-endDate-desc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Latest-Earliest
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={true}
                                          header={false}
                                          key=".$feed-sort-endDate-divider"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="divider"
                                            onKeyDown={[Function]}
                                            role="separator"
                                          />
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={true}
                                          key=".$feed-sort-startDate-header"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="dropdown-header"
                                            onKeyDown={[Function]}
                                            role="heading"
                                          >
                                            Start Date
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-startDate-asc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Earliest-Latest
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-startDate-desc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Latest-Earliest
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={true}
                                          header={false}
                                          key=".$feed-sort-startDate-divider"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="divider"
                                            onKeyDown={[Function]}
                                            role="separator"
                                          />
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={true}
                                          key=".$feed-sort-lastUpdated-header"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="dropdown-header"
                                            onKeyDown={[Function]}
                                            role="heading"
                                          >
                                            Last Update
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-lastUpdated-asc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Stale-Recent
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-lastUpdated-desc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Recent-Stale
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={true}
                                          header={false}
                                          key=".$feed-sort-lastUpdated-divider"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="divider"
                                            onKeyDown={[Function]}
                                            role="separator"
                                          />
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={true}
                                          key=".$feed-sort-numErrors-header"
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className="dropdown-header"
                                            onKeyDown={[Function]}
                                            role="heading"
                                          >
                                            Number of Issues
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-numErrors-asc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Least-Most
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$feed-sort-numErrors-desc"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                Most-Least
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </DropdownButton>
                      </div>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={6}
                    >
                      <div
                        className="col-xs-6"
                      >
                        <FormGroup
                          bsClass="form-group"
                          id="feedFilterToolbarControl"
                        >
                          <div
                            className="form-group"
                            id="feedFilterToolbarControl"
                          >
                            <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                              style={
                                Object {
                                  "display": "block",
                                }
                              }
                            >
                              <label
                                className="control-label"
                                style={
                                  Object {
                                    "display": "block",
                                  }
                                }
                              >
                                Filter feed sources on
                                <select
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "marginLeft": 5,
                                      "marginRight": 5,
                                    }
                                  }
                                  value="LATEST"
                                >
                                  <option
                                    key="LATEST"
                                    value="LATEST"
                                  >
                                    Latest
                                  </option>
                                  <option
                                    key="DEPLOYED"
                                    value="DEPLOYED"
                                  >
                                    Deployed
                                  </option>
                                </select>
                                version
                              </label>
                            </ControlLabel>
                            <ButtonGroup
                              block={false}
                              bsClass="btn-group"
                              justified={false}
                              vertical={false}
                            >
                              <div
                                className="btn-group"
                              >
                                <OptionButton
                                  active={true}
                                  className="active"
                                  key="all"
                                  onClick={[Function]}
                                  value="all"
                                >
                                  <Button
                                    active={true}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className="active"
                                    disabled={false}
                                    href="#"
                                    onClick={[Function]}
                                    value="all"
                                  >
                                    <SafeAnchor
                                      className="active btn btn-default active"
                                      componentClass="a"
                                      disabled={false}
                                      href="#"
                                      onClick={[Function]}
                                      value="all"
                                    >
                                      <a
                                        className="active btn btn-default active"
                                        href="#"
                                        onClick={[Function]}
                                        role="button"
                                        value="all"
                                      >
                                        All
                                         
                                        <Badge
                                          bsClass="badge"
                                          pullRight={false}
                                          style={
                                            Object {
                                              "backgroundColor": "#babec0",
                                            }
                                          }
                                        >
                                          <span
                                            className="badge"
                                            style={
                                              Object {
                                                "backgroundColor": "#babec0",
                                              }
                                            }
                                          >
                                            1
                                          </span>
                                        </Badge>
                                      </a>
                                    </SafeAnchor>
                                  </Button>
                                </OptionButton>
                                <OptionButton
                                  active={false}
                                  className=""
                                  key="active"
                                  onClick={[Function]}
                                  value="active"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className=""
                                    disabled={false}
                                    href="#"
                                    onClick={[Function]}
                                    value="active"
                                  >
                                    <SafeAnchor
                                      className="btn btn-default"
                                      componentClass="a"
                                      disabled={false}
                                      href="#"
                                      onClick={[Function]}
                                      value="active"
                                    >
                                      <a
                                        className="btn btn-default"
                                        href="#"
                                        onClick={[Function]}
                                        role="button"
                                        value="active"
                                      >
                                        Active
                                         
                                        <Badge
                                          bsClass="badge"
                                          pullRight={false}
                                          style={
                                            Object {
                                              "backgroundColor": "#babec0",
                                            }
                                          }
                                        >
                                          <span
                                            className="badge"
                                            style={
                                              Object {
                                                "backgroundColor": "#babec0",
                                              }
                                            }
                                          >
                                            1
                                          </span>
                                        </Badge>
                                      </a>
                                    </SafeAnchor>
                                  </Button>
                                </OptionButton>
                                <OptionButton
                                  active={false}
                                  className=""
                                  key="expiring"
                                  onClick={[Function]}
                                  value="expiring"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className=""
                                    disabled={false}
                                    href="#"
                                    onClick={[Function]}
                                    value="expiring"
                                  >
                                    <SafeAnchor
                                      className="btn btn-default"
                                      componentClass="a"
                                      disabled={false}
                                      href="#"
                                      onClick={[Function]}
                                      value="expiring"
                                    >
                                      <a
                                        className="btn btn-default"
                                        href="#"
                                        onClick={[Function]}
                                        role="button"
                                        value="expiring"
                                      >
                                        Expiring
                                         
                                        <Badge
                                          bsClass="badge"
                                          pullRight={false}
                                          style={
                                            Object {
                                              "backgroundColor": "#babec0",
                                            }
                                          }
                                        >
                                          <span
                                            className="badge"
                                            style={
                                              Object {
                                                "backgroundColor": "#babec0",
                                              }
                                            }
                                          >
                                            0
                                          </span>
                                        </Badge>
                                      </a>
                                    </SafeAnchor>
                                  </Button>
                                </OptionButton>
                                <OptionButton
                                  active={false}
                                  className=""
                                  key="expired"
                                  onClick={[Function]}
                                  value="expired"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className=""
                                    disabled={false}
                                    href="#"
                                    onClick={[Function]}
                                    value="expired"
                                  >
                                    <SafeAnchor
                                      className="btn btn-default"
                                      componentClass="a"
                                      disabled={false}
                                      href="#"
                                      onClick={[Function]}
                                      value="expired"
                                    >
                                      <a
                                        className="btn btn-default"
                                        href="#"
                                        onClick={[Function]}
                                        role="button"
                                        value="expired"
                                      >
                                        Expired
                                         
                                        <Badge
                                          bsClass="badge"
                                          pullRight={false}
                                          style={
                                            Object {
                                              "backgroundColor": "#babec0",
                                            }
                                          }
                                        >
                                          <span
                                            className="badge"
                                            style={
                                              Object {
                                                "backgroundColor": "#babec0",
                                              }
                                            }
                                          >
                                            0
                                          </span>
                                        </Badge>
                                      </a>
                                    </SafeAnchor>
                                  </Button>
                                </OptionButton>
                                <OptionButton
                                  active={false}
                                  className=""
                                  key="future"
                                  onClick={[Function]}
                                  value="future"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className=""
                                    disabled={false}
                                    href="#"
                                    onClick={[Function]}
                                    value="future"
                                  >
                                    <SafeAnchor
                                      className="btn btn-default"
                                      componentClass="a"
                                      disabled={false}
                                      href="#"
                                      onClick={[Function]}
                                      value="future"
                                    >
                                      <a
                                        className="btn btn-default"
                                        href="#"
                                        onClick={[Function]}
                                        role="button"
                                        value="future"
                                      >
                                        Future
                                         
                                        <Badge
                                          bsClass="badge"
                                          pullRight={false}
                                          style={
                                            Object {
                                              "backgroundColor": "#babec0",
                                            }
                                          }
                                        >
                                          <span
                                            className="badge"
                                            style={
                                              Object {
                                                "backgroundColor": "#babec0",
                                              }
                                            }
                                          >
                                            0
                                          </span>
                                        </Badge>
                                      </a>
                                    </SafeAnchor>
                                  </Button>
                                </OptionButton>
                              </div>
                            </ButtonGroup>
                          </div>
                        </FormGroup>
                      </div>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      style={
                        Object {
                          "marginTop": 25,
                        }
                      }
                      xs={2}
                    >
                      <div
                        className="col-xs-2"
                        style={
                          Object {
                            "marginTop": 25,
                          }
                        }
                      >
                        <DropdownButton
                          bsStyle="primary"
                          data-test-id="project-header-action-dropdown-button"
                          id="project-header-actions"
                          style={
                            Object {
                              "marginLeft": 20,
                            }
                          }
                          title="Actions"
                        >
                          <Uncontrolled(Dropdown)
                            bsStyle="primary"
                            id="project-header-actions"
                          >
                            <Dropdown
                              bsClass="dropdown"
                              bsStyle="primary"
                              componentClass={[Function]}
                              id="project-header-actions"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                bsStyle="primary"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group btn-group-primary"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    bsStyle="primary"
                                    data-test-id="project-header-action-dropdown-button"
                                    id="project-header-actions"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    style={
                                      Object {
                                        "marginLeft": 20,
                                      }
                                    }
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="primary"
                                      className="dropdown-toggle"
                                      data-test-id="project-header-action-dropdown-button"
                                      disabled={false}
                                      id="project-header-actions"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                      style={
                                        Object {
                                          "marginLeft": 20,
                                        }
                                      }
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="dropdown-toggle btn btn-primary"
                                        data-test-id="project-header-action-dropdown-button"
                                        disabled={false}
                                        id="project-header-actions"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        style={
                                          Object {
                                            "marginLeft": 20,
                                          }
                                        }
                                        type="button"
                                      >
                                        Actions
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="project-header-actions"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="project-header-actions"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          data-test-id="project-header-create-new-feed-source-button"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$create-feedsource-button"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              data-test-id="project-header-create-new-feed-source-button"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                data-test-id="project-header-create-new-feed-source-button"
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                <Glyphicon
                                                  bsClass="glyphicon"
                                                  glyph="plus"
                                                >
                                                  <span
                                                    className="glyphicon glyphicon-plus"
                                                  />
                                                </Glyphicon>
                                                 
                                                New
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$update-feeds-button"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                <Icon
                                                  type="cloud-download"
                                                >
                                                  <i
                                                    className="fa fa-cloud-download fa-fw "
                                                  />
                                                </Icon>
                                                 
                                                Fetch all
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$merge-feeds-button"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                <Glyphicon
                                                  bsClass="glyphicon"
                                                  glyph="download"
                                                >
                                                  <span
                                                    className="glyphicon glyphicon-download"
                                                  />
                                                </Glyphicon>
                                                 
                                                Merge all
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$csv-download-button"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                <Icon
                                                  type="table"
                                                >
                                                  <i
                                                    className="fa fa-table fa-fw "
                                                  />
                                                </Icon>
                                                 
                                                Download Summary as CSV
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </DropdownButton>
                      </div>
                    </Col>
                  </div>
                </Row>
              </ProjectFeedListToolbar>
            </Connect(ProjectFeedListToolbar)>
          </div>
          <ListGroup
            bsClass="list-group"
            key=".0"
          >
            <div
              className="list-group"
            >
              <table
                className="feed-source-table"
              >
                <thead>
                  <tr>
                    <th />
                    <th
                      className="comparison-column top-row"
                    >
                      <h4>
                        Deployed Version
                      </h4>
                    </th>
                    <th
                      className="feed-version-column top-row"
                      colSpan={3}
                    >
                      <h4>
                        Latest Version
                      </h4>
                    </th>
                    <th />
                  </tr>
                  <tr>
                    <th>
                      <h4>
                        <Icon
                          type="info-circle"
                        >
                          <i
                            className="fa fa-info-circle fa-fw "
                          />
                        </Icon>
                        Feed Info
                      </h4>
                    </th>
                    <th
                      className="comparison-column"
                    >
                      <h4>
                        <Icon
                          type="heartbeat"
                        >
                          <i
                            className="fa fa-heartbeat fa-fw "
                          />
                        </Icon>
                        Status
                      </h4>
                    </th>
                    <th
                      className="feed-version-column"
                    >
                      <h4>
                        <Icon
                          type="heartbeat"
                        >
                          <i
                            className="fa fa-heartbeat fa-fw "
                          />
                        </Icon>
                        Status
                      </h4>
                    </th>
                    <th
                      className="feed-version-column"
                    >
                      <h4>
                        <Icon
                          type="calendar-check-o"
                        >
                          <i
                            className="fa fa-calendar-check-o fa-fw "
                          />
                        </Icon>
                        Dates Valid
                      </h4>
                    </th>
                    <th
                      className="feed-version-column"
                    >
                      <h4>
                        <Icon
                          type="exclamation-triangle"
                        >
                          <i
                            className="fa fa-exclamation-triangle fa-fw "
                          />
                        </Icon>
                        Issues
                      </h4>
                    </th>
                    <th />
                  </tr>
                </thead>
                <tbody>
                  <Connect(FeedSourceTableRow)
                    feedSource={
                      Object {
                        "dateCreated": 1536195264564,
                        "deployable": false,
                        "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                        "externalProperties": Object {},
                        "id": "mock-feed-with-version-id",
                        "isPublic": false,
                        "lastFetched": 1543389038810,
                        "lastUpdated": 1543389038810,
                        "latestValidation": Object {
                          "agencies": null,
                          "agencyCount": 1,
                          "avgDailyRevenueTime": 0,
                          "bounds": Object {
                            "east": -76.481211,
                            "north": 39.0486949672717,
                            "south": 38.92884,
                            "west": -76.5673055566884,
                          },
                          "endDate": "20190801",
                          "errorCount": 78,
                          "feedVersionId": "mock-feed-version-id",
                          "loadFailureReason": null,
                          "loadStatus": "SUCCESS",
                          "routeCount": 10,
                          "startDate": "20180801",
                          "stopCount": 237,
                          "stopTimesCount": 11170,
                          "tripCount": 415,
                        },
                        "latestVersionId": "mock-feed-version-id",
                        "name": "test feed with a version",
                        "noteCount": 0,
                        "organizationId": null,
                        "projectId": "mock-project-id",
                        "publishedVersionId": null,
                        "retrievalMethod": "MANUALLY_UPLOADED",
                        "s3Url": null,
                        "snapshotVersion": null,
                        "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                        "user": null,
                      }
                    }
                    key="mock-feed-with-version-id"
                    project={
                      Object {
                        "autoFetchFeeds": true,
                        "autoFetchHour": 0,
                        "autoFetchMinute": 0,
                        "bounds": null,
                        "buildConfig": Object {
                          "fares": null,
                          "fetchElevationUS": null,
                          "stationTransfers": null,
                          "subwayAccessTime": null,
                        },
                        "dateCreated": 1526305321824,
                        "defaultTimeZone": null,
                        "deployments": Array [
                          Object {
                            "customBuildConfig": null,
                            "customRouterConfig": null,
                            "dateCreated": 1553292345720,
                            "deployedTo": null,
                            "feedSourceId": null,
                            "feedVersions": Array [
                              Object {
                                "feedSource": Object {
                                  "dateCreated": 1536195264564,
                                  "deployable": false,
                                  "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                                  "externalProperties": Object {},
                                  "id": "mock-feed-with-version-id",
                                  "isPublic": false,
                                  "lastFetched": 1543389038810,
                                  "lastUpdated": 1543389038810,
                                  "latestValidation": Object {
                                    "agencies": null,
                                    "agencyCount": 1,
                                    "avgDailyRevenueTime": 0,
                                    "bounds": Object {
                                      "east": -76.481211,
                                      "north": 39.0486949672717,
                                      "south": 38.92884,
                                      "west": -76.5673055566884,
                                    },
                                    "endDate": "20190801",
                                    "errorCount": 78,
                                    "feedVersionId": "mock-feed-version-id",
                                    "loadFailureReason": null,
                                    "loadStatus": "SUCCESS",
                                    "routeCount": 10,
                                    "startDate": "20180801",
                                    "stopCount": 237,
                                    "stopTimesCount": 11170,
                                    "tripCount": 415,
                                  },
                                  "latestVersionId": "mock-feed-version-id",
                                  "name": "test feed with a version",
                                  "noteCount": 0,
                                  "organizationId": null,
                                  "projectId": "mock-project-id",
                                  "publishedVersionId": null,
                                  "retrievalMethod": "MANUALLY_UPLOADED",
                                  "s3Url": null,
                                  "snapshotVersion": null,
                                  "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                                  "user": null,
                                },
                                "id": "mock-feed-version-id",
                                "nextVersionId": null,
                                "previousVersionId": null,
                                "updated": 1543389038810,
                                "validationResult": Object {
                                  "agencies": null,
                                  "agencyCount": 1,
                                  "avgDailyRevenueTime": 0,
                                  "bounds": Object {
                                    "east": -76.481211,
                                    "north": 39.0486949672717,
                                    "south": 38.92884,
                                    "west": -76.5673055566884,
                                  },
                                  "endDate": "20190801",
                                  "errorCount": 78,
                                  "feedVersionId": "mock-feed-version-id",
                                  "loadFailureReason": null,
                                  "loadStatus": "SUCCESS",
                                  "routeCount": 10,
                                  "startDate": "20180801",
                                  "stopCount": 237,
                                  "stopTimesCount": 11170,
                                  "tripCount": 415,
                                },
                                "version": 1,
                              },
                            ],
                            "id": "mock-deployment-id",
                            "invalidFeedSources": Array [],
                            "lastDeployed": null,
                            "lastUpdated": 1553292345726,
                            "name": "mock-deployment",
                            "organizationId": null,
                            "osmFileId": null,
                            "otpCommit": null,
                            "project": [Circular],
                            "projectBounds": null,
                            "routerId": null,
                            "user": null,
                          },
                        ],
                        "feedSources": Array [
                          Object {
                            "dateCreated": 1536195264564,
                            "deployable": false,
                            "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                            "externalProperties": Object {},
                            "id": "mock-feed-with-version-id",
                            "isPublic": false,
                            "lastFetched": 1543389038810,
                            "lastUpdated": 1543389038810,
                            "latestValidation": Object {
                              "agencies": null,
                              "agencyCount": 1,
                              "avgDailyRevenueTime": 0,
                              "bounds": Object {
                                "east": -76.481211,
                                "north": 39.0486949672717,
                                "south": 38.92884,
                                "west": -76.5673055566884,
                              },
                              "endDate": "20190801",
                              "errorCount": 78,
                              "feedVersionId": "mock-feed-version-id",
                              "loadFailureReason": null,
                              "loadStatus": "SUCCESS",
                              "routeCount": 10,
                              "startDate": "20180801",
                              "stopCount": 237,
                              "stopTimesCount": 11170,
                              "tripCount": 415,
                            },
                            "latestVersionId": "mock-feed-version-id",
                            "name": "test feed with a version",
                            "noteCount": 0,
                            "organizationId": null,
                            "projectId": "mock-project-id",
                            "publishedVersionId": null,
                            "retrievalMethod": "MANUALLY_UPLOADED",
                            "s3Url": null,
                            "snapshotVersion": null,
                            "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                            "user": null,
                          },
                        ],
                        "id": "mock-project-with-deployments-id",
                        "lastUpdated": 1553236399556,
                        "name": "mock-project-with-deployments",
                        "organizationId": null,
                        "otpServers": Array [],
                        "pinnedDeploymentId": null,
                        "routerConfig": Object {
                          "carDropoffTime": null,
                          "numItineraries": null,
                          "requestLogFile": null,
                          "stairsReluctance": null,
                          "updaters": null,
                          "walkSpeed": null,
                        },
                        "useCustomOsmBounds": false,
                        "user": null,
                      }
                    }
                  >
                    <FeedSourceTableRow
                      comparisonColumn="DEPLOYED"
                      comparisonValidationSummary={
                        Object {
                          "agencies": null,
                          "agencyCount": 1,
                          "avgDailyRevenueTime": 0,
                          "bounds": Object {
                            "east": -76.481211,
                            "north": 39.0486949672717,
                            "south": 38.92884,
                            "west": -76.5673055566884,
                          },
                          "endDate": "20190801",
                          "errorCount": 78,
                          "feedVersionId": "mock-feed-version-id",
                          "loadFailureReason": null,
                          "loadStatus": "SUCCESS",
                          "routeCount": 10,
                          "startDate": "20180801",
                          "stopCount": 237,
                          "stopTimesCount": 11170,
                          "tripCount": 415,
                        }
                      }
                      createDeploymentFromFeedSource={[Function]}
                      createFeedSource={[Function]}
                      deleteFeedSource={[Function]}
                      feedSource={
                        Object {
                          "dateCreated": 1536195264564,
                          "deployable": false,
                          "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                          "externalProperties": Object {},
                          "id": "mock-feed-with-version-id",
                          "isPublic": false,
                          "lastFetched": 1543389038810,
                          "lastUpdated": 1543389038810,
                          "latestValidation": Object {
                            "agencies": null,
                            "agencyCount": 1,
                            "avgDailyRevenueTime": 0,
                            "bounds": Object {
                              "east": -76.481211,
                              "north": 39.0486949672717,
                              "south": 38.92884,
                              "west": -76.5673055566884,
                            },
                            "endDate": "20190801",
                            "errorCount": 78,
                            "feedVersionId": "mock-feed-version-id",
                            "loadFailureReason": null,
                            "loadStatus": "SUCCESS",
                            "routeCount": 10,
                            "startDate": "20180801",
                            "stopCount": 237,
                            "stopTimesCount": 11170,
                            "tripCount": 415,
                          },
                          "latestVersionId": "mock-feed-version-id",
                          "name": "test feed with a version",
                          "noteCount": 0,
                          "organizationId": null,
                          "projectId": "mock-project-id",
                          "publishedVersionId": null,
                          "retrievalMethod": "MANUALLY_UPLOADED",
                          "s3Url": null,
                          "snapshotVersion": null,
                          "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                          "user": null,
                        }
                      }
                      project={
                        Object {
                          "autoFetchFeeds": true,
                          "autoFetchHour": 0,
                          "autoFetchMinute": 0,
                          "bounds": null,
                          "buildConfig": Object {
                            "fares": null,
                            "fetchElevationUS": null,
                            "stationTransfers": null,
                            "subwayAccessTime": null,
                          },
                          "dateCreated": 1526305321824,
                          "defaultTimeZone": null,
                          "deployments": Array [
                            Object {
                              "customBuildConfig": null,
                              "customRouterConfig": null,
                              "dateCreated": 1553292345720,
                              "deployedTo": null,
                              "feedSourceId": null,
                              "feedVersions": Array [
                                Object {
                                  "feedSource": Object {
                                    "dateCreated": 1536195264564,
                                    "deployable": false,
                                    "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                                    "externalProperties": Object {},
                                    "id": "mock-feed-with-version-id",
                                    "isPublic": false,
                                    "lastFetched": 1543389038810,
                                    "lastUpdated": 1543389038810,
                                    "latestValidation": Object {
                                      "agencies": null,
                                      "agencyCount": 1,
                                      "avgDailyRevenueTime": 0,
                                      "bounds": Object {
                                        "east": -76.481211,
                                        "north": 39.0486949672717,
                                        "south": 38.92884,
                                        "west": -76.5673055566884,
                                      },
                                      "endDate": "20190801",
                                      "errorCount": 78,
                                      "feedVersionId": "mock-feed-version-id",
                                      "loadFailureReason": null,
                                      "loadStatus": "SUCCESS",
                                      "routeCount": 10,
                                      "startDate": "20180801",
                                      "stopCount": 237,
                                      "stopTimesCount": 11170,
                                      "tripCount": 415,
                                    },
                                    "latestVersionId": "mock-feed-version-id",
                                    "name": "test feed with a version",
                                    "noteCount": 0,
                                    "organizationId": null,
                                    "projectId": "mock-project-id",
                                    "publishedVersionId": null,
                                    "retrievalMethod": "MANUALLY_UPLOADED",
                                    "s3Url": null,
                                    "snapshotVersion": null,
                                    "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                                    "user": null,
                                  },
                                  "id": "mock-feed-version-id",
                                  "nextVersionId": null,
                                  "previousVersionId": null,
                                  "updated": 1543389038810,
                                  "validationResult": Object {
                                    "agencies": null,
                                    "agencyCount": 1,
                                    "avgDailyRevenueTime": 0,
                                    "bounds": Object {
                                      "east": -76.481211,
                                      "north": 39.0486949672717,
                                      "south": 38.92884,
                                      "west": -76.5673055566884,
                                    },
                                    "endDate": "20190801",
                                    "errorCount": 78,
                                    "feedVersionId": "mock-feed-version-id",
                                    "loadFailureReason": null,
                                    "loadStatus": "SUCCESS",
                                    "routeCount": 10,
                                    "startDate": "20180801",
                                    "stopCount": 237,
                                    "stopTimesCount": 11170,
                                    "tripCount": 415,
                                  },
                                  "version": 1,
                                },
                              ],
                              "id": "mock-deployment-id",
                              "invalidFeedSources": Array [],
                              "lastDeployed": null,
                              "lastUpdated": 1553292345726,
                              "name": "mock-deployment",
                              "organizationId": null,
                              "osmFileId": null,
                              "otpCommit": null,
                              "project": [Circular],
                              "projectBounds": null,
                              "routerId": null,
                              "user": null,
                            },
                          ],
                          "feedSources": Array [
                            Object {
                              "dateCreated": 1536195264564,
                              "deployable": false,
                              "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                              "externalProperties": Object {},
                              "id": "mock-feed-with-version-id",
                              "isPublic": false,
                              "lastFetched": 1543389038810,
                              "lastUpdated": 1543389038810,
                              "latestValidation": Object {
                                "agencies": null,
                                "agencyCount": 1,
                                "avgDailyRevenueTime": 0,
                                "bounds": Object {
                                  "east": -76.481211,
                                  "north": 39.0486949672717,
                                  "south": 38.92884,
                                  "west": -76.5673055566884,
                                },
                                "endDate": "20190801",
                                "errorCount": 78,
                                "feedVersionId": "mock-feed-version-id",
                                "loadFailureReason": null,
                                "loadStatus": "SUCCESS",
                                "routeCount": 10,
                                "startDate": "20180801",
                                "stopCount": 237,
                                "stopTimesCount": 11170,
                                "tripCount": 415,
                              },
                              "latestVersionId": "mock-feed-version-id",
                              "name": "test feed with a version",
                              "noteCount": 0,
                              "organizationId": null,
                              "projectId": "mock-project-id",
                              "publishedVersionId": null,
                              "retrievalMethod": "MANUALLY_UPLOADED",
                              "s3Url": null,
                              "snapshotVersion": null,
                              "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                              "user": null,
                            },
                          ],
                          "id": "mock-project-with-deployments-id",
                          "lastUpdated": 1553236399556,
                          "name": "mock-project-with-deployments",
                          "organizationId": null,
                          "otpServers": Array [],
                          "pinnedDeploymentId": null,
                          "routerConfig": Object {
                            "carDropoffTime": null,
                            "numItineraries": null,
                            "requestLogFile": null,
                            "stairsReluctance": null,
                            "updaters": null,
                            "walkSpeed": null,
                          },
                          "useCustomOsmBounds": false,
                          "user": null,
                        }
                      }
                      runFetchFeed={[Function]}
                      updateFeedSource={[Function]}
                      uploadFeed={[Function]}
                      user={
                        Object {
                          "isCheckingLogin": false,
                          "permissions": UserPermissions {
                            "appPermissionLookup": Object {
                              "administer-application": Object {
                                "type": "administer-application",
                              },
                            },
                            "orgPermissionLookup": Object {},
                            "organizationLookup": Object {},
                            "projectLookup": Object {},
                          },
                          "profile": Object {
                            "app_metadata": Object {
                              "datatools": Array [
                                Object {
                                  "client_id": "mock-client-id",
                                  "organizations": Array [],
                                  "permissions": Array [
                                    Object {
                                      "type": "administer-application",
                                    },
                                  ],
                                  "projects": Array [],
                                  "subscriptions": Array [],
                                },
                              ],
                            },
                            "clientID": "mock-client-id",
                            "created_at": "2016-03-04T18:59:22.569Z",
                            "email": "mock-user@conveyal.com",
                            "email_verified": true,
                            "identities": Array [
                              Object {
                                "connection": "Username-Password-Authentication",
                                "isSocial": false,
                                "provider": "auth0",
                                "user_id": "12345",
                              },
                            ],
                            "jti": "gibberish",
                            "last_password_reset": "2017-07-13T13:58:01.021Z",
                            "name": "mock-user@conveyal.com",
                            "nickname": "mock-user",
                            "persistent": Object {},
                            "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                            "sub": "auth0|12345",
                            "updated_at": "2019-03-21T19:05:30.180Z",
                            "user_id": "auth0|12345",
                            "user_metadata": Object {
                              "datatools": Array [
                                Object {
                                  "client_id": "mock-client-id",
                                  "editor": Object {
                                    "map_id": "mapbox.streets",
                                  },
                                  "hideTutorial": true,
                                  "sidebarExpanded": false,
                                },
                              ],
                              "lang": "en",
                            },
                          },
                          "recentActivity": null,
                          "redirectOnSuccess": null,
                          "subscriptions": UserSubscriptions {
                            "subscriptionLookup": Object {},
                          },
                          "token": "mock-token",
                        }
                      }
                    >
                      <tr
                        className="feed-source-table-row"
                        key="mock-feed-with-version-id"
                      >
                        <td
                          className="feed-source-info"
                        >
                          <FeedInfo
                            feedSource={
                              Object {
                                "dateCreated": 1536195264564,
                                "deployable": false,
                                "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                                "externalProperties": Object {},
                                "id": "mock-feed-with-version-id",
                                "isPublic": false,
                                "lastFetched": 1543389038810,
                                "lastUpdated": 1543389038810,
                                "latestValidation": Object {
                                  "agencies": null,
                                  "agencyCount": 1,
                                  "avgDailyRevenueTime": 0,
                                  "bounds": Object {
                                    "east": -76.481211,
                                    "north": 39.0486949672717,
                                    "south": 38.92884,
                                    "west": -76.5673055566884,
                                  },
                                  "endDate": "20190801",
                                  "errorCount": 78,
                                  "feedVersionId": "mock-feed-version-id",
                                  "loadFailureReason": null,
                                  "loadStatus": "SUCCESS",
                                  "routeCount": 10,
                                  "startDate": "20180801",
                                  "stopCount": 237,
                                  "stopTimesCount": 11170,
                                  "tripCount": 415,
                                },
                                "latestVersionId": "mock-feed-version-id",
                                "name": "test feed with a version",
                                "noteCount": 0,
                                "organizationId": null,
                                "projectId": "mock-project-id",
                                "publishedVersionId": null,
                                "retrievalMethod": "MANUALLY_UPLOADED",
                                "s3Url": null,
                                "snapshotVersion": null,
                                "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                                "user": null,
                              }
                            }
                          >
                            <div>
                              <h4>
                                <Link
                                  onlyActiveOnIndex={false}
                                  style={Object {}}
                                  to="/feed/mock-feed-with-version-id"
                                >
                                  <a
                                    onClick={[Function]}
                                    style={Object {}}
                                  >
                                    test feed with a version
                                  </a>
                                </Link>
                              </h4>
                              <h5>
                                Last updated Nov 27, 2018
                              </h5>
                              <Row
                                bsClass="row"
                                componentClass="div"
                              >
                                <div
                                  className="row"
                                >
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={12}
                                  >
                                    <div
                                      className="col-xs-12"
                                    >
                                      <Icon
                                        type="link"
                                      >
                                        <i
                                          className="fa fa-link fa-fw "
                                        />
                                      </Icon>
                                      <a
                                        href="http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip"
                                        target="_blank"
                                      >
                                        http://mdtrip.org/googletransit/Ann...
                                        <Icon
                                          type="external-link"
                                        >
                                          <i
                                            className="fa fa-external-link fa-fw "
                                          />
                                        </Icon>
                                      </a>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}
                                  >
                                    <div
                                      className="col-xs-6"
                                    >
                                      <Icon
                                        type="lock"
                                      >
                                        <i
                                          className="fa fa-lock fa-fw "
                                        />
                                      </Icon>
                                      Private
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                            </div>
                          </FeedInfo>
                        </td>
                        <td
                          className="comparison-column"
                        >
                          <Status
                            icon="check-circle"
                            statusSpanClass="status-active"
                            statusText="Active"
                            subtext="Valid for another 2 months"
                            subtextDate="20190801"
                          >
                            <div>
                              <span
                                className="feed-status status-active"
                              >
                                <Icon
                                  type="check-circle"
                                >
                                  <i
                                    className="fa fa-check-circle fa-fw "
                                  />
                                </Icon>
                                Active
                              </span>
                              <div
                                className="feed-status-subtext"
                              >
                                Valid for another 2 months
                                <br />
                                (Aug 1, 2019)
                              </div>
                            </div>
                          </Status>
                        </td>
                        <td
                          className="feed-version-column"
                        >
                          <Status
                            icon="check-circle"
                            statusSpanClass="status-active"
                            statusText="Same as Deployed"
                            subtext="Last updated 5 months ago"
                          >
                            <div>
                              <span
                                className="feed-status status-active"
                              >
                                <Icon
                                  type="check-circle"
                                >
                                  <i
                                    className="fa fa-check-circle fa-fw "
                                  />
                                </Icon>
                                Same as Deployed
                              </span>
                              <div
                                className="feed-status-subtext"
                              >
                                Last updated 5 months ago
                              </div>
                            </div>
                          </Status>
                        </td>
                        <td
                          className="feed-version-column"
                        >
                          Aug 1, 2018
                           -
                          <br />
                          Aug 1, 2019
                        </td>
                        <td
                          className="feed-version-column"
                        >
                          78
                        </td>
                        <td>
                          <FeedActionsDropdown
                            comparisonColumn="DEPLOYED"
                            comparisonValidationSummary={
                              Object {
                                "agencies": null,
                                "agencyCount": 1,
                                "avgDailyRevenueTime": 0,
                                "bounds": Object {
                                  "east": -76.481211,
                                  "north": 39.0486949672717,
                                  "south": 38.92884,
                                  "west": -76.5673055566884,
                                },
                                "endDate": "20190801",
                                "errorCount": 78,
                                "feedVersionId": "mock-feed-version-id",
                                "loadFailureReason": null,
                                "loadStatus": "SUCCESS",
                                "routeCount": 10,
                                "startDate": "20180801",
                                "stopCount": 237,
                                "stopTimesCount": 11170,
                                "tripCount": 415,
                              }
                            }
                            createDeploymentFromFeedSource={[Function]}
                            createFeedSource={[Function]}
                            deleteFeedSource={[Function]}
                            feedSource={
                              Object {
                                "dateCreated": 1536195264564,
                                "deployable": false,
                                "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                                "externalProperties": Object {},
                                "id": "mock-feed-with-version-id",
                                "isPublic": false,
                                "lastFetched": 1543389038810,
                                "lastUpdated": 1543389038810,
                                "latestValidation": Object {
                                  "agencies": null,
                                  "agencyCount": 1,
                                  "avgDailyRevenueTime": 0,
                                  "bounds": Object {
                                    "east": -76.481211,
                                    "north": 39.0486949672717,
                                    "south": 38.92884,
                                    "west": -76.5673055566884,
                                  },
                                  "endDate": "20190801",
                                  "errorCount": 78,
                                  "feedVersionId": "mock-feed-version-id",
                                  "loadFailureReason": null,
                                  "loadStatus": "SUCCESS",
                                  "routeCount": 10,
                                  "startDate": "20180801",
                                  "stopCount": 237,
                                  "stopTimesCount": 11170,
                                  "tripCount": 415,
                                },
                                "latestVersionId": "mock-feed-version-id",
                                "name": "test feed with a version",
                                "noteCount": 0,
                                "organizationId": null,
                                "projectId": "mock-project-id",
                                "publishedVersionId": null,
                                "retrievalMethod": "MANUALLY_UPLOADED",
                                "s3Url": null,
                                "snapshotVersion": null,
                                "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                                "user": null,
                              }
                            }
                            project={
                              Object {
                                "autoFetchFeeds": true,
                                "autoFetchHour": 0,
                                "autoFetchMinute": 0,
                                "bounds": null,
                                "buildConfig": Object {
                                  "fares": null,
                                  "fetchElevationUS": null,
                                  "stationTransfers": null,
                                  "subwayAccessTime": null,
                                },
                                "dateCreated": 1526305321824,
                                "defaultTimeZone": null,
                                "deployments": Array [
                                  Object {
                                    "customBuildConfig": null,
                                    "customRouterConfig": null,
                                    "dateCreated": 1553292345720,
                                    "deployedTo": null,
                                    "feedSourceId": null,
                                    "feedVersions": Array [
                                      Object {
                                        "feedSource": Object {
                                          "dateCreated": 1536195264564,
                                          "deployable": false,
                                          "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                                          "externalProperties": Object {},
                                          "id": "mock-feed-with-version-id",
                                          "isPublic": false,
                                          "lastFetched": 1543389038810,
                                          "lastUpdated": 1543389038810,
                                          "latestValidation": Object {
                                            "agencies": null,
                                            "agencyCount": 1,
                                            "avgDailyRevenueTime": 0,
                                            "bounds": Object {
                                              "east": -76.481211,
                                              "north": 39.0486949672717,
                                              "south": 38.92884,
                                              "west": -76.5673055566884,
                                            },
                                            "endDate": "20190801",
                                            "errorCount": 78,
                                            "feedVersionId": "mock-feed-version-id",
                                            "loadFailureReason": null,
                                            "loadStatus": "SUCCESS",
                                            "routeCount": 10,
                                            "startDate": "20180801",
                                            "stopCount": 237,
                                            "stopTimesCount": 11170,
                                            "tripCount": 415,
                                          },
                                          "latestVersionId": "mock-feed-version-id",
                                          "name": "test feed with a version",
                                          "noteCount": 0,
                                          "organizationId": null,
                                          "projectId": "mock-project-id",
                                          "publishedVersionId": null,
                                          "retrievalMethod": "MANUALLY_UPLOADED",
                                          "s3Url": null,
                                          "snapshotVersion": null,
                                          "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                                          "user": null,
                                        },
                                        "id": "mock-feed-version-id",
                                        "nextVersionId": null,
                                        "previousVersionId": null,
                                        "updated": 1543389038810,
                                        "validationResult": Object {
                                          "agencies": null,
                                          "agencyCount": 1,
                                          "avgDailyRevenueTime": 0,
                                          "bounds": Object {
                                            "east": -76.481211,
                                            "north": 39.0486949672717,
                                            "south": 38.92884,
                                            "west": -76.5673055566884,
                                          },
                                          "endDate": "20190801",
                                          "errorCount": 78,
                                          "feedVersionId": "mock-feed-version-id",
                                          "loadFailureReason": null,
                                          "loadStatus": "SUCCESS",
                                          "routeCount": 10,
                                          "startDate": "20180801",
                                          "stopCount": 237,
                                          "stopTimesCount": 11170,
                                          "tripCount": 415,
                                        },
                                        "version": 1,
                                      },
                                    ],
                                    "id": "mock-deployment-id",
                                    "invalidFeedSources": Array [],
                                    "lastDeployed": null,
                                    "lastUpdated": 1553292345726,
                                    "name": "mock-deployment",
                                    "organizationId": null,
                                    "osmFileId": null,
                                    "otpCommit": null,
                                    "project": [Circular],
                                    "projectBounds": null,
                                    "routerId": null,
                                    "user": null,
                                  },
                                ],
                                "feedSources": Array [
                                  Object {
                                    "dateCreated": 1536195264564,
                                    "deployable": false,
                                    "editorNamespace": "gzek_ztquwiwjmselpeswgbsrre",
                                    "externalProperties": Object {},
                                    "id": "mock-feed-with-version-id",
                                    "isPublic": false,
                                    "lastFetched": 1543389038810,
                                    "lastUpdated": 1543389038810,
                                    "latestValidation": Object {
                                      "agencies": null,
                                      "agencyCount": 1,
                                      "avgDailyRevenueTime": 0,
                                      "bounds": Object {
                                        "east": -76.481211,
                                        "north": 39.0486949672717,
                                        "south": 38.92884,
                                        "west": -76.5673055566884,
                                      },
                                      "endDate": "20190801",
                                      "errorCount": 78,
                                      "feedVersionId": "mock-feed-version-id",
                                      "loadFailureReason": null,
                                      "loadStatus": "SUCCESS",
                                      "routeCount": 10,
                                      "startDate": "20180801",
                                      "stopCount": 237,
                                      "stopTimesCount": 11170,
                                      "tripCount": 415,
                                    },
                                    "latestVersionId": "mock-feed-version-id",
                                    "name": "test feed with a version",
                                    "noteCount": 0,
                                    "organizationId": null,
                                    "projectId": "mock-project-id",
                                    "publishedVersionId": null,
                                    "retrievalMethod": "MANUALLY_UPLOADED",
                                    "s3Url": null,
                                    "snapshotVersion": null,
                                    "url": "http://mdtrip.org/googletransit/AnnapolisTransit/google_transit.zip",
                                    "user": null,
                                  },
                                ],
                                "id": "mock-project-with-deployments-id",
                                "lastUpdated": 1553236399556,
                                "name": "mock-project-with-deployments",
                                "organizationId": null,
                                "otpServers": Array [],
                                "pinnedDeploymentId": null,
                                "routerConfig": Object {
                                  "carDropoffTime": null,
                                  "numItineraries": null,
                                  "requestLogFile": null,
                                  "stairsReluctance": null,
                                  "updaters": null,
                                  "walkSpeed": null,
                                },
                                "useCustomOsmBounds": false,
                                "user": null,
                              }
                            }
                            runFetchFeed={[Function]}
                            updateFeedSource={[Function]}
                            uploadFeed={[Function]}
                            user={
                              Object {
                                "isCheckingLogin": false,
                                "permissions": UserPermissions {
                                  "appPermissionLookup": Object {
                                    "administer-application": Object {
                                      "type": "administer-application",
                                    },
                                  },
                                  "orgPermissionLookup": Object {},
                                  "organizationLookup": Object {},
                                  "projectLookup": Object {},
                                },
                                "profile": Object {
                                  "app_metadata": Object {
                                    "datatools": Array [
                                      Object {
                                        "client_id": "mock-client-id",
                                        "organizations": Array [],
                                        "permissions": Array [
                                          Object {
                                            "type": "administer-application",
                                          },
                                        ],
                                        "projects": Array [],
                                        "subscriptions": Array [],
                                      },
                                    ],
                                  },
                                  "clientID": "mock-client-id",
                                  "created_at": "2016-03-04T18:59:22.569Z",
                                  "email": "mock-user@conveyal.com",
                                  "email_verified": true,
                                  "identities": Array [
                                    Object {
                                      "connection": "Username-Password-Authentication",
                                      "isSocial": false,
                                      "provider": "auth0",
                                      "user_id": "12345",
                                    },
                                  ],
                                  "jti": "gibberish",
                                  "last_password_reset": "2017-07-13T13:58:01.021Z",
                                  "name": "mock-user@conveyal.com",
                                  "nickname": "mock-user",
                                  "persistent": Object {},
                                  "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                                  "sub": "auth0|12345",
                                  "updated_at": "2019-03-21T19:05:30.180Z",
                                  "user_id": "auth0|12345",
                                  "user_metadata": Object {
                                    "datatools": Array [
                                      Object {
                                        "client_id": "mock-client-id",
                                        "editor": Object {
                                          "map_id": "mapbox.streets",
                                        },
                                        "hideTutorial": true,
                                        "sidebarExpanded": false,
                                      },
                                    ],
                                    "lang": "en",
                                  },
                                },
                                "recentActivity": null,
                                "redirectOnSuccess": null,
                                "subscriptions": UserSubscriptions {
                                  "subscriptionLookup": Object {},
                                },
                                "token": "mock-token",
                              }
                            }
                          >
                            <DropdownButton
                              id="feed-source-action-button-mock-feed-with-version-id"
                              title="Menu"
                            >
                              <Uncontrolled(Dropdown)
                                id="feed-source-action-button-mock-feed-with-version-id"
                              >
                                <Dropdown
                                  bsClass="dropdown"
                                  componentClass={[Function]}
                                  id="feed-source-action-button-mock-feed-with-version-id"
                                  onToggle={[Function]}
                                >
                                  <ButtonGroup
                                    block={false}
                                    bsClass="btn-group"
                                    className="dropdown"
                                    justified={false}
                                    vertical={false}
                                  >
                                    <div
                                      className="dropdown btn-group"
                                    >
                                      <DropdownToggle
                                        bsClass="dropdown-toggle"
                                        bsRole="toggle"
                                        id="feed-source-action-button-mock-feed-with-version-id"
                                        key=".0"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        open={false}
                                        useAnchor={false}
                                      >
                                        <Button
                                          active={false}
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="default"
                                          className="dropdown-toggle"
                                          disabled={false}
                                          id="feed-source-action-button-mock-feed-with-version-id"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="button"
                                        >
                                          <button
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            className="dropdown-toggle btn btn-default"
                                            disabled={false}
                                            id="feed-source-action-button-mock-feed-with-version-id"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="button"
                                            type="button"
                                          >
                                            Menu
                                             
                                            <span
                                              className="caret"
                                            />
                                          </button>
                                        </Button>
                                      </DropdownToggle>
                                      <DropdownMenu
                                        bsClass="dropdown-menu"
                                        bsRole="menu"
                                        key=".1"
                                        labelledBy="feed-source-action-button-mock-feed-with-version-id"
                                        onClose={[Function]}
                                        onSelect={[Function]}
                                        pullRight={false}
                                      >
                                        <RootCloseWrapper
                                          disabled={true}
                                          event="click"
                                          onRootClose={[Function]}
                                        >
                                          <ul
                                            aria-labelledby="feed-source-action-button-mock-feed-with-version-id"
                                            className="dropdown-menu"
                                            role="menu"
                                          >
                                            <ConfirmModal
                                              body="Are you sure you want to delete the feed source test feed with a version?"
                                              key=".0"
                                              onConfirm={[Function]}
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                              title="Delete Feed Source?"
                                            >
                                              <Modal
                                                animation={true}
                                                autoFocus={true}
                                                backdrop={true}
                                                bsClass="modal"
                                                dialogComponentClass={[Function]}
                                                enforceFocus={true}
                                                keyboard={true}
                                                manager={
                                                  ModalManager {
                                                    "containers": Array [],
                                                    "data": Array [],
                                                    "handleContainerOverflow": true,
                                                    "hideSiblingNodes": true,
                                                    "modals": Array [],
                                                  }
                                                }
                                                onHide={[Function]}
                                                renderBackdrop={[Function]}
                                                restoreFocus={true}
                                                show={false}
                                              >
                                                <Modal
                                                  autoFocus={true}
                                                  backdrop={true}
                                                  backdropClassName="modal-backdrop"
                                                  backdropTransitionTimeout={150}
                                                  containerClassName="modal-open"
                                                  dialogTransitionTimeout={300}
                                                  enforceFocus={true}
                                                  keyboard={true}
                                                  manager={
                                                    ModalManager {
                                                      "containers": Array [],
                                                      "data": Array [],
                                                      "handleContainerOverflow": true,
                                                      "hideSiblingNodes": true,
                                                      "modals": Array [],
                                                    }
                                                  }
                                                  onEntering={[Function]}
                                                  onExited={[Function]}
                                                  onHide={[Function]}
                                                  renderBackdrop={[Function]}
                                                  restoreFocus={true}
                                                  show={false}
                                                  transition={[Function]}
                                                />
                                              </Modal>
                                            </ConfirmModal>
                                            <SelectFileModal
                                              body="Select a GTFS feed to upload:"
                                              errorMessage="Uploaded file must be a valid zip file (.zip)."
                                              key=".1"
                                              onConfirm={[Function]}
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                              title="Upload Feed"
                                            >
                                              <Modal
                                                animation={true}
                                                autoFocus={true}
                                                backdrop={true}
                                                bsClass="modal"
                                                dialogComponentClass={[Function]}
                                                enforceFocus={true}
                                                keyboard={true}
                                                manager={
                                                  ModalManager {
                                                    "containers": Array [],
                                                    "data": Array [],
                                                    "handleContainerOverflow": true,
                                                    "hideSiblingNodes": true,
                                                    "modals": Array [],
                                                  }
                                                }
                                                onHide={[Function]}
                                                renderBackdrop={[Function]}
                                                restoreFocus={true}
                                                show={false}
                                              >
                                                <Modal
                                                  autoFocus={true}
                                                  backdrop={true}
                                                  backdropClassName="modal-backdrop"
                                                  backdropTransitionTimeout={150}
                                                  containerClassName="modal-open"
                                                  dialogTransitionTimeout={300}
                                                  enforceFocus={true}
                                                  keyboard={true}
                                                  manager={
                                                    ModalManager {
                                                      "containers": Array [],
                                                      "data": Array [],
                                                      "handleContainerOverflow": true,
                                                      "hideSiblingNodes": true,
                                                      "modals": Array [],
                                                    }
                                                  }
                                                  onEntering={[Function]}
                                                  onExited={[Function]}
                                                  onHide={[Function]}
                                                  renderBackdrop={[Function]}
                                                  restoreFocus={true}
                                                  show={false}
                                                  transition={[Function]}
                                                />
                                              </Modal>
                                            </SelectFileModal>
                                            <MenuItem
                                              bsClass="dropdown"
                                              disabled={false}
                                              divider={false}
                                              header={false}
                                              key=".2"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                            >
                                              <li
                                                className=""
                                                role="presentation"
                                              >
                                                <SafeAnchor
                                                  componentClass="a"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex="-1"
                                                >
                                                  <a
                                                    href="#"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex="-1"
                                                  >
                                                    <Glyphicon
                                                      bsClass="glyphicon"
                                                      glyph="pencil"
                                                    >
                                                      <span
                                                        className="glyphicon glyphicon-pencil"
                                                      />
                                                    </Glyphicon>
                                                     Open in Editor
                                                  </a>
                                                </SafeAnchor>
                                              </li>
                                            </MenuItem>
                                            <MenuItem
                                              bsClass="dropdown"
                                              disabled={false}
                                              divider={false}
                                              header={false}
                                              key=".3"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                            >
                                              <li
                                                className=""
                                                role="presentation"
                                              >
                                                <SafeAnchor
                                                  componentClass="a"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex="-1"
                                                >
                                                  <a
                                                    href="#"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex="-1"
                                                  >
                                                    <Glyphicon
                                                      bsClass="glyphicon"
                                                      glyph="refresh"
                                                    >
                                                      <span
                                                        className="glyphicon glyphicon-refresh"
                                                      />
                                                    </Glyphicon>
                                                     Fetch
                                                  </a>
                                                </SafeAnchor>
                                              </li>
                                            </MenuItem>
                                            <MenuItem
                                              bsClass="dropdown"
                                              disabled={false}
                                              divider={false}
                                              header={false}
                                              key=".4"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                            >
                                              <li
                                                className=""
                                                role="presentation"
                                              >
                                                <SafeAnchor
                                                  componentClass="a"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex="-1"
                                                >
                                                  <a
                                                    href="#"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex="-1"
                                                  >
                                                    <Glyphicon
                                                      bsClass="glyphicon"
                                                      glyph="upload"
                                                    >
                                                      <span
                                                        className="glyphicon glyphicon-upload"
                                                      />
                                                    </Glyphicon>
                                                     Upload
                                                  </a>
                                                </SafeAnchor>
                                              </li>
                                            </MenuItem>
                                            <MenuItem
                                              bsClass="dropdown"
                                              disabled={false}
                                              divider={true}
                                              header={false}
                                              key=".5"
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                            >
                                              <li
                                                className="divider"
                                                onKeyDown={[Function]}
                                                role="separator"
                                              />
                                            </MenuItem>
                                            <MenuItem
                                              bsClass="dropdown"
                                              disabled={true}
                                              divider={false}
                                              header={false}
                                              key=".6"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                              title="Feed source is not deployable. Change in feed source settings."
                                            >
                                              <li
                                                className="disabled"
                                                role="presentation"
                                              >
                                                <SafeAnchor
                                                  componentClass="a"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex="-1"
                                                  title="Feed source is not deployable. Change in feed source settings."
                                                >
                                                  <a
                                                    href="#"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex="-1"
                                                    title="Feed source is not deployable. Change in feed source settings."
                                                  >
                                                    <Glyphicon
                                                      bsClass="glyphicon"
                                                      glyph="globe"
                                                    >
                                                      <span
                                                        className="glyphicon glyphicon-globe"
                                                      />
                                                    </Glyphicon>
                                                     Deploy
                                                  </a>
                                                </SafeAnchor>
                                              </li>
                                            </MenuItem>
                                            <MenuItem
                                              bsClass="dropdown"
                                              disabled={true}
                                              divider={false}
                                              header={false}
                                              key=".8"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                            >
                                              <li
                                                className="disabled"
                                                role="presentation"
                                              >
                                                <SafeAnchor
                                                  componentClass="a"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex="-1"
                                                >
                                                  <a
                                                    href="#"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex="-1"
                                                  >
                                                    <Glyphicon
                                                      bsClass="glyphicon"
                                                      glyph="link"
                                                    >
                                                      <span
                                                        className="glyphicon glyphicon-link"
                                                      />
                                                    </Glyphicon>
                                                     View public page
                                                  </a>
                                                </SafeAnchor>
                                              </li>
                                            </MenuItem>
                                            <MenuItem
                                              bsClass="dropdown"
                                              disabled={false}
                                              divider={true}
                                              header={false}
                                              key=".9"
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                            >
                                              <li
                                                className="divider"
                                                onKeyDown={[Function]}
                                                role="separator"
                                              />
                                            </MenuItem>
                                            <MenuItem
                                              bsClass="dropdown"
                                              data-test-id="feed-source-dropdown-delete-feed-source-button"
                                              disabled={false}
                                              divider={false}
                                              header={false}
                                              key=".a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onSelect={[Function]}
                                            >
                                              <li
                                                className=""
                                                role="presentation"
                                              >
                                                <SafeAnchor
                                                  componentClass="a"
                                                  data-test-id="feed-source-dropdown-delete-feed-source-button"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex="-1"
                                                >
                                                  <a
                                                    data-test-id="feed-source-dropdown-delete-feed-source-button"
                                                    href="#"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex="-1"
                                                  >
                                                    <Icon
                                                      type="trash"
                                                    >
                                                      <i
                                                        className="fa fa-trash fa-fw "
                                                      />
                                                    </Icon>
                                                     Delete
                                                  </a>
                                                </SafeAnchor>
                                              </li>
                                            </MenuItem>
                                          </ul>
                                        </RootCloseWrapper>
                                      </DropdownMenu>
                                    </div>
                                  </ButtonGroup>
                                </Dropdown>
                              </Uncontrolled(Dropdown)>
                            </DropdownButton>
                          </FeedActionsDropdown>
                        </td>
                      </tr>
                    </FeedSourceTableRow>
                  </Connect(FeedSourceTableRow)>
                </tbody>
              </table>
            </div>
          </ListGroup>
        </div>
      </Panel>
    </FeedSourceTable>
  </Connect(FeedSourceTable)>
</Provider>
`;
